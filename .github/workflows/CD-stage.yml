name: CD-stage

on:
  push:
    branches:
      - stage

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install newest npm and packages
        run: |
          npm i -g npm
          npm ci

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production
          GATSBY_ROOT_URL: https://stage.masterborn.com
          ALGOLIA_APP_ID: ${{ secrets.STAGE_ALGOLIA_APP_ID }}
          ALGOLIA_SEARCH_KEY: ${{ secrets.STAGE_ALGOLIA_SEARCH_KEY }}
          ALGOLIA_ADMIN_KEY: ${{ secrets.STAGE_ALGOLIA_ADMIN_KEY }}
          ALGOLIA_INDEX_NAME: ${{ secrets.STAGE_ALGOLIA_INDEX_NAME }}

      - name: Rename pathing
        run: |
          mkdir out
          mv public out/blog

      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      CI: true

    steps:
      - uses: actions/download-artifact@v1
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}
          aws-region: ${{ secrets.AWS_REGION_STAGE }}

      - name: Deploy project
        run: |
          aws s3 rm ${{ secrets.S3_PATH_STAGE }} --recursive
          aws s3 sync build ${{ secrets.S3_PATH_STAGE }} --exclude "*" --include "*.js" --include "*.css" --include "*.woff" --include "*.ttf" --include "*.woff2" --include "*.svg" --include "*.png" --include "*.jpg" --include "*.webp" --cache-control=max-age=2592000,public
          aws s3 sync build ${{ secrets.S3_PATH_STAGE }} --exclude "*.js.map" --exclude "webpack.stats.json"
          aws configure set preview.cloudfront true
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_STAGE }} --paths "/blog/*"
